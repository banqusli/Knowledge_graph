import { getStyleConfig } from '../common';
export function getAxisConfig(property, config, axisConfigTypes, style) {
    var _a, _b, _c;
    let styleConfig = getStyleConfig(property, style, config.style);
    if (styleConfig !== undefined) {
        return {
            configFrom: 'style',
            configValue: styleConfig
        };
    }
    // apply properties in config Types first
    for (const configType of axisConfigTypes) {
        if (((_a = config[configType]) === null || _a === void 0 ? void 0 : _a[property]) !== undefined) {
            return {
                configFrom: configType,
                configValue: config[configType][property]
            };
        }
    }
    // then apply style in config types
    for (const configType of axisConfigTypes) {
        if ((_b = config[configType]) === null || _b === void 0 ? void 0 : _b.style) {
            styleConfig = getStyleConfig(property, (_c = config[configType]) === null || _c === void 0 ? void 0 : _c.style, config.style);
            if (styleConfig !== undefined) {
                return {
                    configFrom: 'axis-config-style',
                    configValue: styleConfig
                };
            }
        }
    }
    return {};
}
//# sourceMappingURL=config.js.map